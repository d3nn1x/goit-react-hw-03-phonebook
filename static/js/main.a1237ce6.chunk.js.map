{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","type","pattern","title","required","onChange","Component","Filter","filter","filterContact","ContactList","contacts","onDeleteContact","map","id","onClick","App","deleteContact","contactId","prevState","contact","addToContact","data","newContact","uuidv4","toLowerCase","includes","alert","target","getVisibleContacts","localStorage","getItem","parsedContacts","JSON","parse","pevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1237ce6.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inner_form\">\r\n        <form onSubmit={this.handleSubmit} className=\"form\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <label htmlFor=\"number\">Number</label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n          <button className=\"btn_form\" type=\"submit\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","const Filter = ({ filter, filterContact }) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"filter\">Find contacts by name</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={filterContact}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"contact_list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"contact_list_item\">\r\n          <p className=\"contact_name\">\r\n            {name}: {number}\r\n          </p>\r\n          <button className=\"contact_btn\" onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(pevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  addToContact = data => {\n    const { contacts } = this.state;\n    const newContact = { ...data, id: uuidv4() };\n\n    if (\n      contacts\n        .map(contact => contact.name.toLowerCase())\n        .includes(data.name.toLowerCase())\n    ) {\n      alert(`${data.name} is already in contacts`);\n    } else {\n      this.setState(prevState => ({\n        contacts: [newContact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  filterContact = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const contacts = this.getVisibleContacts();\n    const { filter } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addToContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} filterContact={this.filterContact} />\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}